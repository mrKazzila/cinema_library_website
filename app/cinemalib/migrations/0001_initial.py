# Generated by Django 3.2.18 on 2023-05-04 15:25

import datetime

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('age', models.PositiveSmallIntegerField(default=0, verbose_name='Human age')),
                ('image', models.ImageField(upload_to='actors/', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Actors & Directors',
                'verbose_name_plural': 'Actors & Directors',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(max_length=3000, verbose_name='Description')),
                ('url', models.SlugField(max_length=160, unique=True, verbose_name='Url')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(max_length=3000, verbose_name='Description')),
                ('url', models.SlugField(max_length=160, unique=True, verbose_name='Url')),
            ],
            options={
                'verbose_name': 'Genre',
                'verbose_name_plural': 'Genres',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Movie')),
                ('tagline', models.CharField(default='', max_length=100, verbose_name='Tagline')),
                ('description', models.TextField(max_length=3000, verbose_name='Description')),
                ('poster', models.ImageField(upload_to='movies/', verbose_name='Poster')),
                ('year', models.PositiveSmallIntegerField(default=2023, verbose_name='Year')),
                ('country', models.CharField(max_length=30, verbose_name='Country')),
                ('world_premiere', models.DateField(default=datetime.date.today, verbose_name='World premiere date')),
                ('budget', models.PositiveIntegerField(default=0, help_text='by dollar USA', verbose_name='Budget')),
                (
                    'fees_in_usa',
                    models.PositiveIntegerField(default=0, help_text='by dollar USA', verbose_name='Fees in USA')
                ),
                (
                    'fees_in_world',
                    models.PositiveIntegerField(default=0, help_text='by dollar USA', verbose_name='Fees in World')
                ),
                ('url', models.SlugField(max_length=150, unique=True, verbose_name='Url')),
                ('is_draft', models.BooleanField(default=False, verbose_name='Is it draft')),
                (
                    'actors',
                    models.ManyToManyField(related_name='film_actor', to='cinemalib.Actor', verbose_name='Actors')
                ),
                (
                    'category',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to='cinemalib.category',
                        verbose_name='Category'
                    )
                ),
                (
                    'directors',
                    models.ManyToManyField(
                        related_name='film_director', to='cinemalib.Actor', verbose_name='Directors'
                    )
                ),
                ('genres', models.ManyToManyField(to='cinemalib.Genre', verbose_name='Genre')),
            ],
            options={
                'verbose_name': 'Movie',
                'verbose_name_plural': 'Movies',
            },
        ),
        migrations.CreateModel(
            name='RatingStar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveSmallIntegerField(default=0, verbose_name='Value')),
            ],
            options={
                'verbose_name': 'Movie Short',
                'verbose_name_plural': 'Movie Shorts',
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=100, verbose_name='Email')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('text', models.TextField(max_length=5000, verbose_name='Review text')),
                (
                    'movie',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='cinemalib.movie', verbose_name='Movie'
                    )
                ),
                (
                    'parent',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='cinemalib.reviews',
                        verbose_name='Parent review'
                    )
                ),
            ],
            options={
                'verbose_name': 'Review for movie',
                'verbose_name_plural': 'Reviews for movie',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=15, verbose_name='IP address')),
                (
                    'movie',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='cinemalib.movie', verbose_name='Movie'
                    )
                ),
                (
                    'star',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='cinemalib.ratingstar', verbose_name='Star'
                    )
                ),
            ],
            options={
                'verbose_name': 'Movie rating',
                'verbose_name_plural': 'Movie ratings',
            },
        ),
        migrations.CreateModel(
            name='MovieShorts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('description', models.TextField(max_length=3000, verbose_name='Description')),
                ('image', models.ImageField(upload_to='movie_shorts/', verbose_name='Shorts')),
                (
                    'movie',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='cinemalib.movie', verbose_name='Movie'
                    )
                ),
            ],
            options={
                'verbose_name': 'Movie Short',
                'verbose_name_plural': 'Movie Shorts',
            },
        ),
    ]
